const questions = {
	1 : {
		question: "1. Which of the problems below BEST characterize a result of software failure?",
		answer1: 'Damaged reputation',
		answer2: 'Lack of methodology',
		answer3: 'Inadequate training',
		answer4: 'Regulatory Compliance',
		correctAnswer: `Q1 - Correct answer is 1 . As per page number 13 of the ISTQB Syllabus: Software 
						that does not work correctly can lead to many problems, including loss of money,
						 time, or business reputation, and even injury or death.`,
	},
	2 : {
		question: "2. Faults found by users are due to",
		answer1: 'Poor quality software',
		answer2: 'Poor software and poor testing',
		answer3: 'Bad luck',
		answer4: 'Insufficient time for testing',
		correctAnswer: `Q2 - Correct answer is 2`,
	},
	3 : {
		question: "3. Which of the following statements contains a valuable objective for a test team?",
		answer1: 'Prove that the remaining defects will not cause any additional failures.',
		answer2: 'Run all of the tests that are defined for the test object as quickly as possible',
		answer3: 'Prove that all faults have been identified through thorough testing.',
		answer4: 'Cause as many failures as possible so that faults can be identified and corrected.',
		correctAnswer: `Q3 - Correct answer is 4`,
	},
	4 : {
		question: "4. Which of these are objectives for software testing?",
		answer1: 'Determine the productivity of programmers',
		answer2: 'Eliminate the need for future program maintenance',
		answer3: 'Eliminate every error prior to release',
		answer4: 'Uncover software errors',
		correctAnswer: `Q4 - Correct answer is 4`,
	},
	6 : {
		question: "6. Which is not the testing objectives?",
		answer1: 'Finding Defects',
		answer2: 'Gaining confidence about the level of quality and providing information',
		answer3: 'Preventing defects',
		answer4: 'Debugging defects',
		correctAnswer: `Q6 - Correct answer is 4. Debugging is a developers task and not the objective of testing`,
	},
	7 : {
		question: "7. Who would USUALLY perform debugging activities?",
		answer1: 'Developers',
		answer2: 'Analysts',
		answer3: 'Testers',
		answer4: 'Incident Managers',
		correctAnswer: `Q7 - Correct answer is 1. Based on Page number 14 of the ISTQB Syllabus: Debugging is the development activity that finds, analyzes, and fixes such defects.`,
	},
	8 : {
		question: "8. What is the process of analyzing and removing causes of failures in software?",
		answer1: 'Validation',
		answer2: 'Testing',
		answer3: 'Debugging',
		answer4: 'Verification',
		correctAnswer: `Q8 - Correct answer is 3.`,
	},
	9 : {
		question: "9. Why is testing necessary?",
		answer1: 'Because testing is good method to make sure there are not defects in the software',
		answer2: 'Because verification and validation are not enough to get to know the quality of the software',
		answer3: 'Because testing measures the quality of the software system and helps to increase the quality',
		answer4: 'Because testing finds more defects than reviews and inspections.',
		correctAnswer: `Q9 - Correct answer is 3.`,
	},
	10 : {
		question: "10. The most important thing about early test design is that it:",
		answer1: 'Makes test preparation easier',
		answer2: 'Means inspections are not required',
		answer3: 'Can prevent fault multiplication',
		answer4: 'Will find all faults',
		correctAnswer: `Q10 - Correct answer is 3.`,
	},
	11 : {
		question: "11. Quality Control is?",
		answer1: 'Phase building activity',
		answer2: 'Intermediate activity',
		answer3: 'End of phase activity',
		answer4: 'Design activity',
		correctAnswer: `Q11 - Correct answer is 3. Quality control is an end of phase activity because testing is done once the work product is completed, all the other quality checks are done once the activity is done,`,
	},
	12 : {
		question: "12. Failure is?",
		answer1: 'Incorect program behaviour due to a fault in the program',
		answer2: 'Bug found before product release',
		answer3: 'Bug found after product release',
		answer4: 'Bug found during design phase',
		correctAnswer: `Q12 - Correct answer is 1.`,
	},
	13 : {
		question: "13. When what is visible to end-users is a deviation from the specific or expected behavior, this is called:",
		answer1: 'An error',
		answer2: 'A failure',
		answer3: 'A mistake',
		answer4: 'A defect',
		correctAnswer: `Q13 - Correct answer is 2.`,
	},
	14 : {
		question: "14. What is failure?",
		answer1: 'Deviation from expected result to actual result',
		answer2: 'Defect in the software',
		answer3: 'Error in the program code',
		answer4: 'Fault in the system',
		correctAnswer: `Q14 - Correct answer is 1.`,
	},
	15 : {
		question: "15. How can software defects in future projects be prevented from reoccurring??",
		answer1: 'Creating documentation procedures and allocating resource contingencies',
		answer2: 'Asking programmers to perform a thorough and independent testing',
		answer3: 'Combining levels of testing and mandating inspections of all documents',
		answer4: 'Documenting lessons learned and determining the root cause of problems',
		correctAnswer: `Q15 - Correct answer is 4.`,
	},
	16 : {
		question: "16. Which defects are OFTEN much cheaper to remove?",
		answer1: 'Usability defects found by customers',
		answer2: 'Defects in infrequently used functionality',
		answer3: 'Defects that were detected early',
		answer4: 'Minor defects that were found by users',
		correctAnswer: `Q16 - Correct answer is 3.`,
	},
	17 : {
		question: "17. What is the MAIN benefit of designing tests early in the life cycle?",
		answer1: 'It is cheaper than designing tests during the test phases',
		answer2: 'It helps prevent defect from being introduced into the code',
		answer3: 'Tests designed early are more effective than tests designed later',
		answer4: 'It saves time during the testing phases when testers are busy',
		correctAnswer: `Q17 - Correct answer is 2.`,
	},
	18 : {
		question: "18. Which is not a testing principle?",
		answer1: 'Early testing',
		answer2: 'Defect clustering',
		answer3: 'Pesticide paradox',
		answer4: 'Exhaustive testing',
		correctAnswer: `Q18 - Correct answer is 4. Exhaustive testing is not the principle, Exhaustive testing means testing everything, as per the principle it should be Exhaustive testing is impossible, be careful !!`,
	},
	19 : {
		question: "19. The cost of fixing a fault:",
		answer1: 'Is not important',
		answer2: 'Increases as we move the product towards live use',
		answer3: 'Decreases as we move the product towards live use',
		answer4: 'Is more expensive if found in requirements than functional design',
		correctAnswer: `Q19 - Correct answer is 2.`,
	},
	21 : {
		question: "21. The later in the development life cycle a fault is discovered, the more expensive it is to fix. Why?",
		answer1: 'The documentation is poor, so it takes longer to find out what the software is doing.',
		answer2: 'Wages are rising',
		answer3: 'The fault has been built into more documentation,code,tests, etc',
		answer4: 'None of the above',
		correctAnswer: `Q21- Correct answer is 3.`,
	},
	22 : {
		question: "22. In foundation level syllabus you will find the main basic principles of testing. Which of the following sentences describes one of these basic principles?",
		answer1: 'Complete testing of software is attainable if you have enough resources and test tools',
		answer2: 'With automated testing you can make statements with more confidence about the quality of a product than with manual testing',
		answer3: 'For a software system, it is not possible, under normal conditions, to test all input and output combinations.',
		answer4: 'A goal of testing is to show that the software is defect free.',
		correctAnswer: `Q22 - Correct answer is 3.`,
	},
	23 : {
		question: "23. Which of the following characterizes the cost of faults?",
		answer1: 'They are cheapest to find in the early development phases and the most expensive to fix in the latest test phases.',
		answer2: 'They are easiest to find during system testing but the most expensive to fix then.',
		answer3: 'Faults are cheapest to find in the early development phases but the most expensive to fix then.',
		answer4: 'Although faults are most expensive to find during early development phases, they are cheapest to fix then.',
		correctAnswer: `Q23 - Correct answer is 1.`,
	},
	24 : {
		question: "24. Purpose of test design technique is?",
		answer1: 'Identifying test conditions only, not Identifying test cases',
		answer2: 'Not Identifying test conditions, Identifying test cases only',
		answer3: 'Identifying test conditions and Identifying test cases',
		answer4: 'Identifying test conditions or Identifying test cases',
		correctAnswer: `Q24 - Correct answer is 2. Test condition is identified during test analysis stage`,
	},
	25 : {
		question: "25. Reviewing the test Basis is a part of which phase?",
		answer1: 'Test Analysis',
		answer2: 'Test Design',
		answer3: 'Test Implementation',
		answer4: 'Test Closure Activities',
		correctAnswer: `Q25 - Correct answer is 1.`,
	},
	26 : {
		question: "26. Designing the test environment set-up and identifying any required infrastructure and tools are a part of which phase?",
		answer1: 'Test implementation',
		answer2: 'Test execution',
		answer3: 'Test Analysis',
		answer4: 'Test Design',
		correctAnswer: `Q26 - Correct answer is 4.`,
	},
	27 : {
		question: "27. Which of the following is not a part of the Test Implementation and Execution Phase?",
		answer1: 'Creating test suites from the test cases',
		answer2: 'Executing test cases either manually or by using test execution tools',
		answer3: 'Comparing actual results',
		answer4: 'Designing the Tests',
		correctAnswer: `Q27 - Correct answer is 4. Done during test design stage`,
	},
	30 : {
		question: "30. If an expected result is not specified then:",
		answer1: 'We cannot run the test',
		answer2: 'It may be difficult to repeat the test',
		answer3: 'It may be difficult to determine if the test has passed or failed',
		answer4: 'We cannot automate the user inputs',
		correctAnswer: `Q30 - Correct answer is 3.`,
	},
	31 : {
		question: "31. Which activity in the fundamental test process creates test suites for efficient test execution?",
		answer1: 'Test Implementation',
		answer2: 'Test Execution',
		answer3: 'Test Analysis',
		answer4: 'Test Design',
		correctAnswer: `Q31 - Correct answer is 1. Creating test suites from the test procedures and (if any) automated test scripts are tasks of Test implementation`,
	},
	32 : {
		question: "32. Which of the following MAIN activity is part of the fundamental test process?",
		answer1: 'Initiating and planning',
		answer2: 'Documenting root-causes',
		answer3: 'Capturing lessons learned',
		answer4: 'Planning and control',
		correctAnswer: `Q32 - Correct answer is 4.`,
	},
	33 : {
		question: "33. Which of the following is a KEY test closure task?",
		answer1: 'Ensuring proper environment setup',
		answer2: 'Writing a test summary report',
		answer3: 'Assessing the need for additional tests',
		answer4: 'Finalizing and archiving testware.',
		correctAnswer: `Q33 - Correct answer is 4. If you do not store the report(one of the artifacts) , how will you justify the summary report. if you have reports you can prepare summary reports but if you have summary report you can get the results`,
	},
	35 : {
		question: "35. One person has been dominating the current software process improvement meeting. Which of the following techniques should the facilitator use to bring other team members into the discussion?",
		answer1: 'Confront the person and ask that other team members be allowed to express their opinions',
		answer2: 'Wait for the person to pause, acknowledge the person\'s opinion, and ask for someone else\'s opinion',
		answer3: 'Switch the topic to an issue about which the person does not have a strong opinion',
		answer4: 'Express an opinion that differs from the person\'s opinion in order to encourage others to express their ideas.',
		correctAnswer: `Q35 - Correct answer is 2.`,
	},
	36 : {
		question: "36. One Key reason why developers have difficulty testing their own work is :",
		answer1: 'Lack of technical documentation',
		answer2: 'Lack of test tools on the market for developers',
		answer3: 'Lack of training',
		answer4: 'Lack of objectivity',
		correctAnswer: `Q36 - Correct answer is 4.`,
	},
	37 : {
		question: "37. Which of the following characterizes the cost of faults?",
		answer1: 'They are cheapest to find in the early development phases and the most expensive to fix in the latest test phases.',
		answer2: 'They are easiest to find during system testing but the most expensive to fix then.',
		answer3: 'Faults are cheapest to find in the early development phases but the most expensive to fix then.',
		answer4: 'Although faults are most expensive to find during early development phases, they are cheapest to fix then.',
		correctAnswer: `Q37 - Correct answer is 1.`,
	},
	38 : {
		question: "38. Which, in general, is the least required skill of a good tester?",
		answer1: 'Being diplomatic',
		answer2: 'Able to write software',
		answer3: 'Having good attention to detail',
		answer4: 'Able to be relied on',
		correctAnswer: `Q38 - Correct answer is 2. This is expected from developer`,
	},
	39 : {
		question: "39. What principles do “avoiding author bias” and “communicating problems constructively” represent?",
		answer1: 'Preventive testing and reactive testing.',
		answer2: 'Experience-based testing and interoperability testing',
		answer3: 'Independent testing and good interpersonal skills',
		answer4: 'Criticism avoidance and effective relationships',
		correctAnswer: `Q39 - Correct answer is 3.`,
	},
	40 : {
		question: "40. When reporting faults found to developers, testers should be:",
		answer1: 'As polite, constructive and helpful as possible',
		answer2: 'Firm about insisting that a bug is not a “feature” if it should be fixed',
		answer3: 'Diplomatic, sensitive to the way they may react to criticism',
		answer4: 'All of the above',
		correctAnswer: `Q40 - Correct answer is 4.`,
	},
	41 : {
		question: "41. Which of the following is the activity that removes the cause of a failure?",
		answer1: 'Testing',
		answer2: 'Dynamic Testing',
		answer3: 'Debugging',
		answer4: 'Reverse engineering',
		correctAnswer: `Q41 - Correct answer is 3. Debugging is the process of finding analyzing and removing the causes of failures in software`,
	},
	42 : {
		question: "42. As a tester which of the following is a key to effectively communicating and maintaining positive relationships with developers when there is disagreement over the prioritization of a defect?",
		answer1: 'Escalate the issue to human resources and stress the importance of mutual respect',
		answer2: 'Communicate in a setting with senior management to ensure everyone understands',
		answer3: 'Convince the developer to accept the blame for the mistake',
		answer4: 'Remind them of the common goal of creating quality systems',
		correctAnswer: `Q42 - Correct answer is 4. Start with collaboration rather than battles and remind everyone that it is a common goal to build better quality systems. `,
	},
	43 : {
		question: "43. Why is software testing sometimes required for legal reasons?",
		answer1: 'It prevents developers from suing tester',
		answer2: 'Contracts may specify testing requirements that must be fulfilled',
		answer3: 'International laws require software testing for exported products',
		answer4: 'Testing across systems must be accompanied by legal documentation',
		correctAnswer: `Q43 - Correct answer is 2. Software testing may be required to meet contractual requirements and commitments and penalties are sometimes assessed when quality goals are not met`,
	},
	44 : {
		question: "44. In what way does root cause analysis contribute to process improvement?",
		answer1: 'Helps to better identify and correct the root cause of defects',
		answer2: 'Outlines how development teams can code faster',
		answer3: 'Specifies the desired root causes to be achieved by other teams',
		answer4: 'Contributes to the justification of future project funding',
		correctAnswer: `Q44 - Correct answer is 1. Root cause analysis can determine common causes of issues.Addressing these common causes by process improvementcan increase quality.`,
	},
	45 : {
		question: "45. Why is it important to avoid the pesticide paradox?",
		answer1: 'Dynamic testing is less reliable in finding bugs',
		answer2: 'Pesticides mixed with static testing can allow bugs to escape detection',
		answer3: 'Tests should not be context dependent',
		answer4: 'Running the same tests over and over will reduce the chance of finding new defects',
		correctAnswer: `Q45 - Correct answer is 4. As tests are run repeatedly the pesticide (the tests) become less effective`,
	},
	46 : {
		question: "46. Which of the following is the activity that compares the planned test progress to the actual test progress?",
		answer1: 'Test monitoring',
		answer2: 'Test planning',
		answer3: 'Test closure',
		answer4: 'Test control',
		correctAnswer: `Q46 - Correct answer is 1. Test monitoring involves the on-going comparison of actual progress against the test plan`,
	},
	47 : {
		question: "47. Which of the following is the correct statement?",
		answer1: 'An error causes a failure which results in a defect',
		answer2: 'A defect causes a failure which results in an error',
		answer3: 'A failure is observed as an error and the root cause is the defect',
		answer4: 'An error causes a defect which is observed as a failure',
		correctAnswer: `Q47 - Correct answer is 4. The error or the mistake made by the developer causes a defect in the code. When that code is executed a failure can be observed.`,
	},
	48 : {
		question: "48. What type of activity is normally used to find and fix a defect in the code?",
		answer1: 'Regression testing',
		answer2: 'Debugging',
		answer3: 'Dynamic analysis',
		answer4: 'Static analysis',
		correctAnswer: `Q48 - Correct answer is 2.`,
	},
	49 : {
		question: "49. Which one of the statements below describes the most common situation for a failure discovered during testing or in production?",
		answer1: 'The product crashed when the user selected an option in a dialog box.',
		answer2: 'The wrong version of a compiled source code file was included in the build',
		answer3: 'The computation algorithm used the wrong input variable',
		answer4: 'The developer misinterpreted the requirement for the algorithm',
		correctAnswer: `Q48 - Correct answer is 1. A crash is clearly noticeable by the user`,
	},
	50 : {
		question: "50. What is the test basis?",
		answer1: 'The point during software development when testing should start',
		answer2: 'The body of knowledge used for test analysis and design',
		answer3: 'The source to determine the actual results from a set of tests',
		answer4: 'The method used to systematically devise test conditions',
		correctAnswer: `Q50 - Correct answer is 2. The test basis is a source to determine expected results to compare with the actual result of the system under test`,
	},
	51 : {
		question: "51. When the tester verifies the test basis while designing tests early in the lifecycle which common test objective is being achieved?",
		answer1: 'Gaining confidence',
		answer2: 'Finding defects',
		answer3: 'Preventing defect',
		answer4: 'Providing information for decision making',
		correctAnswer: `Q51 - Correct answer is 3. This is a bit tricky because you are very likely to find defects while doing this analysis and this may lead to either gaining or destroying confidence and needing to supply information to the decision makers`,
	},
	52 : {
		question: "52. When following the fundamental test process when should the test control activity take place?",
		answer1: 'During the planning activities',
		answer2: 'During the implementation and execution activities',
		answer3: 'During the monitoring activities',
		answer4: 'During all the activities',
		correctAnswer: `Q52 - Correct answer is 4. Control occurs throughout the project to ensure that it is staying on track based on the plan and to take any corrective steps that may be necessary. The monitoring information is used to determine if control actions are needed.`,
	},
	53 : {
		question: "53. Which of the following is a correct statement?",
		answer1: 'A developer makes a mistake which causes a defect that may be seen as a failure during dynamic testing',
		answer2: 'A developer makes an error which results in a failure that may be seen as a fault when the software is executed',
		answer3: 'A developer has introduced a failure which results in a defect that may be seen as a mistake during dynamic testing',
		answer4: 'A developer makes a mistake which causes a bug that may be seen as a defect when the software is executed',
		correctAnswer: `Q53 - Correct answer is 1.`,
	},
	54 : {
		question: "54. Which of the following is an example of debugging?",
		answer1: 'A tester finds a defect and reports it',
		answer2: 'A tester retests a fix from the developer and finds a regression',
		answer3: 'A developer finds and fixes a defect',
		answer4: 'A developer performs unit testing',
		correctAnswer: `Q54 - Correct answer is 3.`,
	},
	55 : {
		question: "55. Which of the following is a true statement about exhaustive testing?",
		answer1: 'It is a form of stress testing',
		answer2: 'It is not feasible except in the case of trivial software',
		answer3: 'It is commonly done with test automation',
		answer4: 'It is normally the responsibility of the developer during unit testing',
		correctAnswer: `Q55 - Correct answer is 2. Exhaustive testing all combinations of inputs and preconditions is not feasible unless the software is trivially simple.Otherwise it would take too long and might not even be possible.`,
	},
	57 : {
		question: "57. If you need to provide a report showing test case execution coverage of the requirements what do you need to track?",
		answer1: 'Traceability between the test cases and the requirements',
		answer2: 'Coverage of the risk items by test case',
		answer3: 'Traceability between the requirements and the risk items',
		answer4: 'Coverage of the requirements by the test cases that have been design',
		correctAnswer: `Q57 - Correct answer is 1. In order to show the test execution coverage of the requirements you will need traceability between the requirements and the test cases. As the test cases are executed this traceability can be used to record tests executed against the requirements.`,
	},
	58 : {
		question: "58. Which of the following statements BEST describes one of the seven key principles of software testing?",
		answer1: 'By using automated testing it is possible to test everything.',
		answer2: 'With sufficient effort and tool support, exhaustive testing is feasible for all software.',
		answer3: 'It is normally impossible to test all input/output combinations for a software system.',
		answer4: 'The purpose of testing is to demonstrate the absence of defects.',
		correctAnswer: `Q58 - Correct answer is 3.`,
	},
	59 : {
		question: "59. Which of the following statements is the MOST valid goal for a test team?",
		answer1: 'To determine whether enough component tests were executed within system testing.',
		answer2: 'To detect as many failures as possible so that defects can be identified and corrected.',
		answer3: 'To prove that all possible defects are identified.',
		answer4: 'To prove that any remaining defects will not cause any failures.',
		correctAnswer: `Q59 - Correct answer is 2.`,
	},
	60 : {
		question: "60. Which of these tasks would you expect to be performed during the Test Analysis and Design phase of the Fundamental Test Process?",
		answer1: 'Defining test objectives',
		answer2: 'Reviewing the test basis',
		answer3: 'Creating test suites from test procedures',
		answer4: 'Analyzing lessons learned from process improvement',
		correctAnswer: `Q60 - Correct answer is 2.`,
	},
	61 : {
		question: "61. Below is a list of problems that can be observed during testing or in production. Which one of these problems is a failure?",
		answer1: 'The product crashed when the user selected an option in a dialog box.',
		answer2: 'One source code file included in the build has the FALSE version.',
		answer3: 'The computation algorithm used FALSE input variables.',
		answer4: 'The developer misinterpreted the requirement for the algorithm.',
		correctAnswer: `Q61 - Correct answer is 1. A failure is an external manifestation of a defect. A crash is clearly noticeable by user`,
	},
	62 : {
		question: "62. Which of the following attitudes, qualifications or actions would lead to problems (or conflict) within mixed teams of testers and developers, when observed in reviews and tests?",
		answer1: 'Testers and developers are curious and focused on finding defects.',
		answer2: 'Testers and developers are sufficiently qualified to find failures and defects',
		answer3: 'Testers and developers communicate defects as criticism of people, not as criticism of the software product.',
		answer4: 'Testers expect that there might be defects in the software product which the developers have not found and fixed',
		correctAnswer: `Q62 - Correct answer is 3.`,
	},
	64 : {
		question: "64. Which of the following statements correctly describes the difference between testing and debugging?",
		answer1: 'Testing identifies the source of defects; debugging analyzes the faults and proposes prevention activities.',
		answer2: 'Dynamic testing shows failures caused by defects; debugging finds, analyzes, and removes the causes of failures in the software.',
		answer3: 'Testing removes faults; debugging identifies the causes of failures.',
		answer4: 'Dynamic testing prevents the causes of failures; debugging removes the failures.',
		correctAnswer: `Q64 - Correct answer is 2.`,
	},
	65 : {
		question: "65. What is quality?",
		answer1: 'Part of quality management focused on providing confidence that quality requirements will be fulfilled.',
		answer2: 'The degree to which a component, system or process meets specified requirements and/or user/customer needs and expectations',
		answer3: 'The degree to which a component or system protects information and data so that persons or other components or systems have the degree of access appropriate to their types and levels of authorization.',
		answer4: 'The total costs incurred on quality activities and issues and often split into prevention costs, appraisal costs, internal failure costs and external failure costs',
		correctAnswer: `Q65 - Correct answer is 2.`,
	},
	66 : {
		question: "66. Which of the following is a typical test objective?",
		answer1: 'Preventing defects',
		answer2: 'Repairing defect',
		answer3: 'Comparing actual results to expected results.',
		answer4: 'Analyzing the cause of failure',
		correctAnswer: `Q66 - Correct answer is 1.`,
	},
	67 : {
		question: "67. A programmer improperly creatss the logic that checks the upper boundary of an input. Later, a tester notices that this input field accepts invalid input values. The improperly coded logic for the upper boundary check is:",
		answer1: 'The root cause',
		answer2: 'The failure',
		answer3: 'The error',
		answer4: 'The defect',
		correctAnswer: `Q67 - Correct answer is 4. The root cause is the distraction that the programmer experienced while programming. The accepting of invalid inputs is the failure. The error is the mistaken thinking that resulted in putting the defect in the code. The problem in the code is a defect.`,
	},
	68 : {
		question: "68. A product owner says that your role as a tester on an Agile team is to catch all the bugs before the end of each iteration. Which of the following is a testing principle that could be used to respond to this statement?",
		answer1: 'Defect clustering',
		answer2: 'Testing shows the presence of defects',
		answer3: 'Absence of error fallacy',
		answer4: 'Root cause analysis',
		correctAnswer: `Q68 - Correct answer is 2. Defect clustering has to show where defects are most likely to be found, not whether all of them can be found. Testing can show the presence of defects but cannot prove their absence, which makes it impossible to know if you have caught all the bugs. Further, the impossibility of exhaustive testing makes it impossible for you to catch all the bugs. Absence of error fallacy, this principle says that you can find and remove many bugs but still release an unsuccessful software product, which is not what the product owner is asking you to ensure. `,
	},
	69 : {
		question: "69. Programmers often write and execute unit tests against code which they have written. During this self-testing activity, which of the following is a tester mindset that programmers should adopt to perform this unit testing effectively?",
		answer1: 'Good communication skills',
		answer2: 'Code coverage',
		answer3: 'Evaluating code defect',
		answer4: 'Attention to detail',
		correctAnswer: `Q69 - Correct answer is 4. The programmer appears to be performing unit testing on their own. Code coverage is useful for unit testing, but it is not a tester mindset . Evaluating code defect ,the programmers mindset included contemplating what might be wrong with the code, but that is not a testers mindset .Attention to detail, will help programmers find defects during unit testing`,
	},
	71: {
		question: "71. A tester identified a potential performance problem related to certain common user searches. This possible problem was explained to the development team. Which of the following is a testing contribution to success that BEST matches this situation??",
		answer1: 'Enabling required tests to be identified at an early stage',
		answer2: 'Ensuring processes are carried out properly',
		answer3: 'Reducing the risk of fundamental design defects',
		answer4: 'Reducing the risk of untestable functionality',
		correctAnswer: `Q71 - Correct answer is 3. while enabling required tests to be identified in an early stage is a testing contribution to success per section 1.2.1, there is no indication in the question that the tester did so. Ensuring processes are carried out properly is part of quality assurance, not a testing contribution to success. Reducing the risk of fundamental design defects is a testing contribution to success per section 1.2.1. Database structure is related to design, and performance problems can be a significant product risk`,
	},
	72 : {
		question: "72. Which of the following is an example of a task that can be carried out as part of the test process?",
		answer1: 'Analyzing a defect',
		answer2: 'Designing test data',
		answer3: 'Assigning a version to a test item',
		answer4: 'Writing a user story',
		correctAnswer: `Q72 - Correct answer is 2. Analyzing a defect is part of debugging, not testing. Creating test data is a test implementation task per section 1.4.2. While a tester may need to identify a test items version for results reporting purposes, assigning a test items version is part of configuration management, per section 5.4. Writing a user story is not a testing activity and should be done by the product owner`,
	},
	73 : {
		question: "73. Which of the following provides the definition of the term test case?",
		answer1: 'Subset of the value domain of a variable within a component or system in which all values are expected to be treated the same based on the specification',
		answer2: 'A set of preconditions, inputs, actions, expected results and postconditions, developed based on test conditions',
		answer3: 'Work products produced during the test process for use in planning, designing, executing, evaluating and reporting on testing.',
		answer4: 'A source to determine an expected result to compare with the actual result of the system under test',
		correctAnswer: `Q73 - Correct answer is 2.`,
	},
	74 : {
		question: "74. Which of the following is a typical objective of testing?",
		answer1: 'To find defects and failure',
		answer2: 'To validate the project plan works as required',
		answer3: 'Ensuring of complete testing',
		answer4: 'Comparing actual results with expected results',
		correctAnswer: `Q74 - Correct answer is 1. One of the major objectives of testing is to find defects and failures. Validation of the project plan would be a project management activity. Complete/exhaustive testing is not possible. "Comparing actual results with expected results” is a test performing activity, but not a test objective`,
	},
	75 : {
		question: "75. Which of the following is an example of a failure in a car cruise control system?",
		answer1: 'The developer of the system forgot to rename variables after a cut-and-paste operation',
		answer2: 'Unnecessary code that sounds an alarm when reversing was included in the system',
		answer3: 'The system stops maintaining a set speed when the radio volume is increased or decreased',
		answer4: 'The design specification for the system wrongly states speeds',
		correctAnswer: `Q75 - Correct answer is 3.`,
	},
	76 : {
		question: "76. Which of the following is a defect rather than a root cause in a fitness tracker?",
		answer1: 'Because the author of the requirements was unfamiliar with the domain of fitness training, he therefore wrongly assumed that users wanted heartbeat in beats per hour',
		answer2: 'The tester of the smartphone interface had not been trained in state transition testing, so missed a major defect',
		answer3: 'An incorrect configuration variable implemented for the GPS function could cause location problems during daylight saving times',
		answer4: 'Because the designer had never worked on wearable devices before, she as designer of the user interface therefore misunderstood the effects of reflected sunlight',
		correctAnswer: `Q76 - Correct answer is 3.`,
	},
	77 : {
		question: "77. As a result of risk analysis, more testing is being directed to those areas of the system under test where initial testing found more defects than average. Which of the following testing principles is being applied?",
		answer1: 'Beware of the pesticide paradox',
		answer2: 'Testing is context dependent',
		answer3: 'Absence of errors is a fallacy',
		answer4: 'Defects cluster together',
		correctAnswer: `Q77 - Correct answer is 4.`,
	},
	79: {
		question: "79. Which of the following BEST describes how value is added by maintaining traceability between the test basis and test artifacts?",
		answer1: 'Maintenance testing can be fully automated based on changes to the initial requirements',
		answer2: 'It is possible to determine if a new test case has increased coverage of the requirements',
		answer3: 'Test managers can identify which testers found the highest severity defect.',
		answer4: 'Areas that may be impacted by side-effects of a change can be targeted by confirmation testing',
		correctAnswer: `Q79 - Correct answer is 2. If all testcases are linked with requirements, then whenever a new test case (with traceability) is added, it is possible to see if any previously uncovered requirements are covered by the new test case `,
	},
	80 : {
		question: "80. Which of the following qualities is MORE likely to be found in a testers mindset rather than in a developers?",
		answer1: 'A testers mindset tends to grow and mature as the tester gains experience',
		answer2: 'Ability to see what might go wrong',
		answer3: 'Good communication with team member',
		answer4: 'Attention to detail',
		correctAnswer: `Q80 - Correct answer is 2. Developers are often more interested in designing and building solutions than in contemplating what might be wrong with those solutions`,
	},
	81: {
		question: "81. Which one of the following answers describes a test condition?",
		answer1: 'A distinguishing characteristic of a component or system',
		answer2: 'A testable aspect of a component or system identified as a basis for testing',
		answer3: 'The degree to which a software product provides functions which meet stated and implied needs when the software is used under specified conditions',
		answer4: 'Test cases designed to execute combinations of conditions and actions resulting from them',
		correctAnswer: `Q81 - Correct answer is 2.`,
	},
	82 : {
		question: "82. Which of the following statements is a valid objective for testing?",
		answer1: 'The test should start as late as possible so that development had enough time to create a good product',
		answer2: 'To validate whether the test object works as expected by the users and other stakeholder',
		answer3: 'To prove that all possible defects are identified',
		answer4: 'To prove that any remaining defects will not cause any failure',
		correctAnswer: `Q82 - Correct answer is 2.`,
	},
	83 : {
		question: "83. Which of the following statements correctly describes the difference between testing and debugging?",
		answer1: 'Testing identifies the source of defects; debugging analyzes the defects and proposes prevention activities',
		answer2: 'Dynamic testing shows failures caused by defects; debugging eliminates the defects, which are the source of failures',
		answer3: 'Testing does not remove faults; but debugging removes defects that cause the fault',
		answer4: 'Dynamic testing prevents the causes of failures; debugging removes the failure',
		correctAnswer: `Q83 - Correct answer is 2. Dynamic testing can show failures that are caused by defects in the software. Debugging eliminates the defects, which are the source of failures, not the root cause of the defects`,
	},
	85 : {
		question: "85. In what way can testing be part of Quality Assurance?",
		answer1: 'It ensures that requirements are detailed enough',
		answer2: 'Testing reduces the risk of poor software quality',
		answer3: 'It ensures that standards in the organization are followed',
		answer4: 'It measures the quality of software in terms of number of executed test cases',
		correctAnswer: `Q85 - Correct answer is 2. Testing contributes to the achievement of quality in a variety of ways, e.g. such as reducing the risk of inadequate software quality`,
	},
	86 : {
		question: "86. Which of the following activities is part of the main activity test analysis in the test process??",
		answer1: 'Identifying any required infrastructure and tools',
		answer2: 'Creating test suites from test scripts',
		answer3: 'Analyzing lessons learned for process improvement',
		answer4: 'Evaluating the test basis for testability',
		correctAnswer: `Q86 - Correct answer is 4. This activity is performed during the test analysis activity (test analysis)`,
	},
	88 : {
		question: "88. Which of the following will help prevent defects from reoccurring?",
		answer1: 'Determining the environmental conditions that caused the failure',
		answer2: 'Improving processes based on root cause analysis',
		answer3: 'Lessons learned from other projects',
		answer4: 'Prioritizing reoccurring defects higher than new defects',
		correctAnswer: `Q88 - Correct answer is 2.`,
	},
	89 : {
		question: "89. Which characteristic must a tester possess in order to be successful when working with a project team?",
		answer1: 'Constructive communication skills',
		answer2: 'Authoritarian leadership style',
		answer3: 'Extroverted personality',
		answer4: 'Extensive organizational network',
		correctAnswer: `Q89 - Correct answer is 1. Identifying failures during testing can be perceived as criticism so the approach must be presented in a constructive manner`,
	},
	90 : {
		question: "90. When test cases are designed early in the lifecycle, verifying the test basis via the test design, which common test objective is being achieved?",
		answer1: 'Gaining confidence',
		answer2: 'Finding defects',
		answer3: 'Preventing defects',
		answer4: 'Providing information for decision making',
		correctAnswer: `Q90 - Correct answer is 3. The other three are achieved primarily by doing dynamic testing. This is a tricky one because you are very likely to find defects while doing this analysis and this may lead to either gaining or destroying confidence and needing to supply information to the decision makers. However, the wording of the question matches the wording in the syllabus that defines preventing defects`,
	},
	91 : {
		question: "91. When following the fundamental test process, when should the test control activity take place?",
		answer1: 'During the planning activities',
		answer2: 'During the implementation and execution activities',
		answer3: 'During the monitoring activities',
		answer4: 'During all the activities',
		correctAnswer: `Q91 - Correct answer is 4. Control occurs throughout the project to ensure that it is staying on track based on the plan and to take any corrective steps that may be necessary. The monitoring information is used to determine if control actions are needed.`,
	},
	92 : {
		question: "92. Test cases occurs during which activity in the fundamental test process?",
		answer1: 'Test planning',
		answer2: 'Test design',
		answer3: 'Test implementation',
		answer4: 'Evaluating exit criteria',
		correctAnswer: `Q92 - Correct answer is 2. The design and prioritization of the high level test cases happens during test analysis and design. Prioritization of the test procedures happens during implementation and execution`,
	},
	93 : {
		question: "93. Which of the following is an example of debugging?",
		answer1: 'A tester finds a defect and reports it',
		answer2: 'A tester retests a fix from the developer and finds a regression',
		answer3: 'A developer finds and fixes a defect',
		answer4: 'A developer performs unit testing',
		correctAnswer: `Q93 - Correct answer is 3. Debugging is what the developer does to identify the cause of the defect, analyze it and fix it. 4 may involve debugging, if the developer finds a defect, but the act of unit testing is not the same as debugging`,
	},
	94 : {
		question: "94. Which of the following is a true statement about exhaustive testing?",
		answer1: 'Its a form of stress testing',
		answer2: 'It is not feasible except in the case of trivial software',
		answer3: 'It is commonly done with test automation',
		answer4: 'It is normally the responsibility of the developer during unit testing',
		correctAnswer: `Q94 - Correct answer is 2. Exhaustive testing, all combinations of inputs and preconditions, is not feasible unless the software is trivially simple. Otherwise it would take too long and might not even be possible.`,
	},
	95 : {
		question: "95. When should the testers start reviewing project documents?",
		answer1: 'When they have been baselined and approved',
		answer2: 'After the first revision',
		answer3: 'As soon as a draft is available',
		answer4: 'When the developers have started coding',
		correctAnswer: `Q95 - Correct answer is 3. This allows testers to have input into the quality of the document as well as the work products that will result from the documentation. Reviewing at the draft stage will require subsequent reviews as the document matures, but better to get a look at it while it’s still being changed to provide input.`,
	},
	96 : {
		question: "96. How does software testing contribute to the quality of delivered software?",
		answer1: 'By detecting and removing all the defects in the delivered code and ensuring that all tests adhere to the quality standards set for the project',
		answer2: 'By measuring reliability of the software and ensuring that it is always above 99.99percent',
		answer3: 'By identifying root causes of defects from past projects and using the lessons learned to improve processes and thus help to reduce the defect count',
		answer4: 'By detecting all deviations from coding good practice and ensuring that these are corrected',
		correctAnswer: `Q96 - Correct answer is 3`,
	},
	97 : {
		question: "97. Which of the following BEST describes the relationship between test planning and test execution?",
		answer1: 'Test planning sets the level of detail in test procedures for test execution',
		answer2: 'Test planning schedules test execution but does not assign resources',
		answer3: 'Test planning defines the overall approach to testing but does not schedule test execution',
		answer4: 'Test planning assigns resources for test execution but does not schedule the test activities.',
		correctAnswer: `Q97 - Correct answer is 1.`,
	},
	98 : {
		question: "98. Which of the following is a valid objective of testing?",
		answer1: 'Correcting defects',
		answer2: 'Confirming target delivery dates',
		answer3: 'Finding defects',
		answer4: 'Ensuring no defects are present',
		correctAnswer: `Q98 - Correct answer is 3.`,
	},
	99 : {
		question: "99. Which statement correctly describes debugging?",
		answer1: 'Testers identify defects, developers locate and correct defects, testers confirm the correction has cleared the original defect',
		answer2: 'Developers identify defects, testers locate defects, developers correct and confirm the correction has cleared the original defect',
		answer3: 'Testers identify and locate defects, developers correct defects and confirm the correction has cleared the original defect',
		answer4: 'Developers identify, locate and correct defects, testers confirm the correction has cleared the original defect',
		correctAnswer: `Q99 - Correct answer is 1.`,
	},
	100 : {
		question: "100. Which of the activities of the fundamental test process does the task verify the test environment set up is correct relate to?",
		answer1: 'Planning and control',
		answer2: 'Analysis and design',
		answer3: 'Implementation',
		answer4: 'Evaluating exit criteria and reporting',
		correctAnswer: `Q100 - Correct answer is 3.`,
	},
	103 : {
		question: "103. V Model is :",
		answer1: 'A software development model that illustrates how testing activities integrate with software development phases',
		answer2: 'A software life-cycle model that is not relevant for testing',
		answer3: 'The official software development and testing life-cycle model of ISTQB',
		answer4: 'A testing life cycle model including unit, integration, system and acceptance phases',
		correctAnswer: `Q103 - Correct answer is 1.`,
	},
}

module.exports = { questions }